(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{342:function(e,t,s){"use strict";s.r(t);var a=s(30),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"fluxparallax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fluxparallax"}},[e._v("#")]),e._v(" FluxParallax")]),e._v(" "),s("h2",{attrs:{id:"description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[e._v("#")]),e._v(" Description")]),e._v(" "),s("p",[e._v("Creates a parallax effect given an image. It can recreate 3 types, relative, visible and fixed.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("Do not forget to set the height with CSS if has no content, otherwise you probably will not see anything.")])]),e._v(" "),s("h2",{attrs:{id:"attributes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attributes"}},[e._v("#")]),e._v(" Attributes")]),e._v(" "),s("h3",{attrs:{id:"src"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#src"}},[e._v("#")]),e._v(" src")]),e._v(" "),s("p",[e._v("The image URL to be displayed.")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Type:")]),e._v(" "),s("code",[e._v("String")])]),e._v(" "),s("li",[s("strong",[e._v("Required:")]),e._v(" "),s("code",[e._v("true")])])]),e._v(" "),s("h3",{attrs:{id:"holder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#holder"}},[e._v("#")]),e._v(" holder")]),e._v(" "),s("p",[e._v("Represents the object that should be watched for scrolling.")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Type:")]),e._v(" "),s("code",[e._v("String")])]),e._v(" "),s("li",[s("strong",[e._v("Required:")]),e._v(" "),s("code",[e._v("false")])]),e._v(" "),s("li",[s("strong",[e._v("Default:")]),e._v(" "),s("code",[e._v("window")])])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("This parameter has no effect when the effect type set to "),s("code",[e._v("fixed")])])]),e._v(" "),s("h3",{attrs:{id:"type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[e._v("#")]),e._v(" type")]),e._v(" "),s("p",[e._v("Depending on the type the effect will differ.")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Type:")]),e._v(" "),s("code",[e._v("String")])]),e._v(" "),s("li",[s("strong",[e._v("Required:")]),e._v(" "),s("code",[e._v("false")])]),e._v(" "),s("li",[s("strong",[e._v("Default:")]),e._v(" "),s("code",[e._v("relative")])])]),e._v(" "),s("h4",{attrs:{id:"relative"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#relative"}},[e._v("#")]),e._v(" relative")]),e._v(" "),s("p",[e._v("This type is the default and moves the image with the defined offset when scrolling until reaches the edge.")]),e._v(" "),s("h4",{attrs:{id:"visible"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#visible"}},[e._v("#")]),e._v(" visible")]),e._v(" "),s("p",[e._v("This works pretty like the relative except because the image will not start moving until the whole image is visible.")]),e._v(" "),s("h4",{attrs:{id:"fixed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fixed"}},[e._v("#")]),e._v(" fixed")]),e._v(" "),s("p",[e._v("Makes the parallax element like a window through you can view the defined image, and you see the part of the image where the parallax position.")]),e._v(" "),s("h3",{attrs:{id:"offset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#offset"}},[e._v("#")]),e._v(" offset")]),e._v(" "),s("p",[e._v("Is the amount of image hidden that will be displayed when scrolling.")]),e._v(" "),s("p",[e._v("If set in percentage the amount of pixels will be calculated in reference of height. So if the height is "),s("code",[e._v("300px")]),e._v(", and the offset is set to "),s("code",[e._v("100%")]),e._v(" then the image will displace for "),s("code",[e._v("300px")]),e._v(".")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Type:")]),e._v(" "),s("code",[e._v("Number | String")])]),e._v(" "),s("li",[s("strong",[e._v("Required:")]),e._v(" "),s("code",[e._v("false")])]),e._v(" "),s("li",[s("strong",[e._v("Default:")]),e._v(" "),s("code",[e._v("100%")])])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("This parameter has no effect when the effect type set to "),s("code",[e._v("fixed")])])]),e._v(" "),s("h2",{attrs:{id:"methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),s("h3",{attrs:{id:"resize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resize"}},[e._v("#")]),e._v(" resize()")]),e._v(" "),s("p",[e._v("Recalculates the sizes.")]),e._v(" "),s("h3",{attrs:{id:"setcss-css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setcss-css"}},[e._v("#")]),e._v(" setCss(css)")]),e._v(" "),s("p",[e._v("Set CSS styles to the parallax.")]),e._v(" "),s("ul",[s("li",[e._v("css\n"),s("ul",[s("li",[e._v("Description: an object with the CSS attributes in "),s("strong",[e._v("camel case")]),e._v(" and values.")]),e._v(" "),s("li",[e._v("Type: "),s("code",[e._v("Object")])])])])])])}),[],!1,null,null,null);t.default=i.exports}}]);