(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{202:function(e,t,a){"use strict";a.r(t);var r=a(0),s=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"fluxparallax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fluxparallax","aria-hidden":"true"}},[e._v("#")]),e._v(" FluxParallax")]),e._v(" "),a("h2",{attrs:{id:"description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#description","aria-hidden":"true"}},[e._v("#")]),e._v(" Description")]),e._v(" "),a("p",[e._v("Creates a parallax effect given an image. It can recreate 3 types, relative, visible and fixed.")]),e._v(" "),a("h2",{attrs:{id:"attributes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attributes","aria-hidden":"true"}},[e._v("#")]),e._v(" Attributes")]),e._v(" "),a("h3",{attrs:{id:"src"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#src","aria-hidden":"true"}},[e._v("#")]),e._v(" src")]),e._v(" "),a("p",[e._v("The image URL to be displayed.")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Type:")]),e._v(" "),a("code",[e._v("String")])]),e._v(" "),a("li",[a("strong",[e._v("Required:")]),e._v(" "),a("code",[e._v("true")])])]),e._v(" "),a("h3",{attrs:{id:"holder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#holder","aria-hidden":"true"}},[e._v("#")]),e._v(" holder")]),e._v(" "),a("p",[e._v("Represents the object that should be watched for scrolling.")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Type:")]),e._v(" "),a("code",[e._v("String")])]),e._v(" "),a("li",[a("strong",[e._v("Required:")]),e._v(" "),a("code",[e._v("false")])]),e._v(" "),a("li",[a("strong",[e._v("Default:")]),e._v(" "),a("code",[e._v("window")])])]),e._v(" "),a("h3",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type","aria-hidden":"true"}},[e._v("#")]),e._v(" type")]),e._v(" "),a("p",[e._v("Depending on the type the effect will differ.")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Type:")]),e._v(" "),a("code",[e._v("String")])]),e._v(" "),a("li",[a("strong",[e._v("Required:")]),e._v(" "),a("code",[e._v("false")])]),e._v(" "),a("li",[a("strong",[e._v("Default:")]),e._v(" "),a("code",[e._v("relative")])])]),e._v(" "),a("h4",{attrs:{id:"relative"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relative","aria-hidden":"true"}},[e._v("#")]),e._v(" Relative")]),e._v(" "),a("p",[e._v("This type is the default and moves the image with the defined offset when scrolling until reaches the edge.")]),e._v(" "),a("h4",{attrs:{id:"visible"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visible","aria-hidden":"true"}},[e._v("#")]),e._v(" Visible")]),e._v(" "),a("p",[e._v("This works pretty like the relative except because the image will not start moving until the whole image is visible.")]),e._v(" "),a("h4",{attrs:{id:"fixed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fixed","aria-hidden":"true"}},[e._v("#")]),e._v(" Fixed")]),e._v(" "),a("p",[e._v("Makes the parallax element like a window through you can view the defined image, and you see the part of the image where the parallax position.")]),e._v(" "),a("h3",{attrs:{id:"height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#height","aria-hidden":"true"}},[e._v("#")]),e._v(" height")]),e._v(" "),a("p",[e._v("The height the image should have in pixels, by default is auto which means that will auto detect size by content or defined by CSS.")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Type:")]),e._v(" "),a("code",[e._v("String")])]),e._v(" "),a("li",[a("strong",[e._v("Required:")]),e._v(" "),a("code",[e._v("false")])]),e._v(" "),a("li",[a("strong",[e._v("Default:")]),e._v(" "),a("code",[e._v("auto")])])]),e._v(" "),a("h3",{attrs:{id:"offset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offset","aria-hidden":"true"}},[e._v("#")]),e._v(" offset")]),e._v(" "),a("p",[e._v("Is the amount of image hidden that will be displayed when scrolling.")]),e._v(" "),a("p",[e._v("If set in percentage the amount of pixels will be calculated in reference of height.")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Type:")]),e._v(" "),a("code",[e._v("Number | String")])]),e._v(" "),a("li",[a("strong",[e._v("Required:")]),e._v(" "),a("code",[e._v("false")])]),e._v(" "),a("li",[a("strong",[e._v("Default:")]),e._v(" "),a("code",[e._v("60%")])])]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("h3",{attrs:{id:"resize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resize","aria-hidden":"true"}},[e._v("#")]),e._v(" resize()")]),e._v(" "),a("p",[e._v("Recalculates the sizes.")]),e._v(" "),a("h3",{attrs:{id:"setcss-css-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setcss-css-object","aria-hidden":"true"}},[e._v("#")]),e._v(" setCss(css: "),a("code",[e._v("Object")]),e._v(")")]),e._v(" "),a("p",[e._v("Set CSS styles to the cube.")]),e._v(" "),a("h4",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css","aria-hidden":"true"}},[e._v("#")]),e._v(" css")]),e._v(" "),a("p",[e._v("An object with the CSS attributes in "),a("strong",[e._v("camel case")]),e._v(" and values.")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Type:")]),e._v(" "),a("code",[e._v("Object")])])])])},[],!1,null,null,null);t.default=s.exports}}]);